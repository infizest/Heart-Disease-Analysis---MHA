# -*- coding: utf-8 -*-
"""Heart Disease Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DNsQ8K6yoRL0fuE6f4odHK_dcF4_GydI

# Heart Disease Analysis

***Step 1: Import Libraries***
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# Configure visualizations
sns.set(style="whitegrid", palette="muted", font_scale=1.2)
print("Libraries Imported")

"""***Step 2: Load the Dataset***"""

file_path = "/heart_disease.csv"
data = pd.read_csv(file_path)
print(data.head())
print(data.info())

"""***Data Cleaning***"""

data_cleaned = data.drop_duplicates()
data_cleaned = data_cleaned.dropna(how='all')

# Remove rows with any missing values
data_cleaned = data_cleaned.dropna()

# Display the first few rows of the cleaned dataset
print("\nCleaned Data Head:")
print(data_cleaned.head())

# Display dataset information after cleaning
print("\nCleaned Data Info:")
print(data_cleaned.info())

"""***Checking for any missing values***"""

missing_values = data.isnull().sum()
print("\nMissing Values:\n", missing_values)

"""***Compute summary statistics***

# Step 4 : Compute summary statistics
"""

summary_stats = data.describe()
print("\nSummary Statistics:\n", summary_stats)

from google.colab import files
# Save summary statistics to a CSV file
file_path = "summary_statistics.csv"
summary_stats.to_csv(file_path, index=True)

# Download the file
files.download(file_path)

"""# Step 5: Data Visualizations

***5.1 Correlation Heatmap***

***Selecting only numeric columns***
"""

numeric_columns = data_cleaned.select_dtypes(include=['float64', 'int64'])

# heatmap for correlations
plt.figure(figsize=(10, 8))
#correlation matrix
correlation_matrix = numeric_columns.corr()
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)

# Title and labels
plt.title("Correlation Heatmap")
plt.show()

"""***5.2 Histogram of Age Plotting***"""

plt.figure(figsize=(8, 5))
data['Age'].hist(bins=20, color='skyblue', edgecolor='black')
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

"""***5.3 Scatter plot to analyze relationships Age VS cholesterol***"""

plt.figure(figsize=(8, 6))
sns.scatterplot(x='Age', y='Cholesterol Level', data=data, hue='Heart Disease Status', palette='viridis')
plt.title('Age vs Cholesterol by Heart Disease Status')
plt.xlabel('Age')
plt.ylabel('Cholesterol')
plt.legend(title='Heart Disease')
plt.show()

"""***5.4 Bar plot for categorical data ***"""

plt.figure(figsize=(8, 5))
sns.countplot(x='Gender', data=data, hue='Gender', palette='pastel', dodge=False, legend=False)
plt.title('Gender Distribution')
plt.xlabel('Gender')
plt.ylabel('Count')
plt.show()

gender_distribution = data['Gender'].value_counts()
gender_distribution

"""***Save the data***"""

data.to_csv('processed_heart_disease.csv', index=False)
print("Analysis complete. Visualizations displayed, and processed data saved as 'processed_heart_disease.csv'.")

"""***Download the Final file from here***"""

files.download('processed_heart_disease.csv')